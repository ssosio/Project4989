<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="boot.sagu.mapper.ChatMessageMapper">
    <resultMap id="ChatMessageResultMap" type="boot.sagu.dto.ChatMessageDto">
        <id property="message_id" column="message_id"/>
        <result property="chat_room_id" column="chat_room_id"/>
        <result property="sender_id" column="sender_id"/>
        <result property="message_type" column="message_type"/>
        <result property="message_content" column="message_content"/>
        <result property="created_at" column="created_at"/>
        <result property="is_read" column="is_read"/>
    </resultMap>
    
    <insert id="insertMessage" parameterType="boot.sagu.dto.ChatMessageDto">
		insert into chatmessage values(null,#{chat_room_id},#{sender_id},#{message_type},#{message_content},now(),1)
	</insert>
	
    <select id="getAllMessages" parameterType="long" resultMap="ChatMessageResultMap">
        select 
            message_id,
            chat_room_id,
            sender_id,
            message_type,
            message_content,
            created_at,
            is_read
        from chatmessage 
        where chat_room_id=#{chat_room_id} 
        order by created_at asc
    </select>
    <update id="updateMessagesAsRead" parameterType="map">
            UPDATE chatmessage 
        SET is_read = 1 
        WHERE chat_room_id = #{chatRoomId} 
        AND sender_id != #{readerId} 
        AND is_read = 0
    </update>
    
</mapper>