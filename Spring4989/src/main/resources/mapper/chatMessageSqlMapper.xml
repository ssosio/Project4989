<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="boot.sagu.mapper.ChatMessageMapper">
    <resultMap id="ChatMessageResultMap" type="boot.sagu.dto.ChatMessageDto">
        <id property="message_id" column="message_id"/>
        <result property="chat_room_id" column="chat_room_id"/>
        <result property="sender_id" column="sender_id"/>
        <result property="message_type" column="message_type"/>
        <result property="message_content" column="message_content"/>
        <result property="created_at" column="created_at"/>
        <result property="is_read" column="is_read"/>
        <result property="deleted_at" column="deleted_at"/>
    </resultMap>
    
    <insert id="insertMessage" parameterType="boot.sagu.dto.ChatMessageDto" useGeneratedKeys="true" keyProperty="message_id">
    INSERT INTO chatmessage (
        chat_room_id,
        sender_id,
        message_content,
        message_type,
        created_at
    ) VALUES (
        #{chat_room_id},
        #{sender_id},
        #{message_content},
        #{message_type},
        now()
    )
</insert>
	
    <select id="getAllMessages" parameterType="long" resultMap="ChatMessageResultMap" useCache="false">
      SELECT
      m.message_id,
      m.chat_room_id,
      m.sender_id,
      m.message_type,
      m.message_content,  -- 삭제된 메시지 처리 로직 제거
      m.created_at,
      m.is_read,
      m.deleted_at  -- deleted_at 필드는 유지
    FROM chatmessage m
    LEFT JOIN chatfile f ON m.message_id = f.message_id
    WHERE m.chat_room_id = #{chat_room_id}
    ORDER BY m.created_at ASC
    </select>
    <update id="updateMessagesAsRead" parameterType="map">
            UPDATE chatmessage 
        SET is_read = 1 
        WHERE chat_room_id = #{chatRoomId} 
        AND sender_id != #{readerId} 
        AND is_read = 0
    </update>
    
    <insert id="insertSystemMessage" parameterType="boot.sagu.dto.ChatMessageDto">
    INSERT INTO chatmessage (chat_room_id, sender_id, message_type, message_content, created_at)
    VALUES (#{chat_room_id}, #{sender_id},'SYSTEM', #{message_content}, NOW())
</insert>

<update id="deleteMessage" parameterType="Long">
	update chatmessage set deleted_at=now()	where message_id=#{message_id}
</update>

<select id="getChatRoomIdByMessageId" parameterType="Long" resultType="Long">
	SELECT chat_room_id FROM chatmessage WHERE message_id = #{messageId}
</select>

    
    <update id="updateAllMessagesDeletedAt" parameterType="long">
        UPDATE chatmessage
        SET deleted_at = now()
        WHERE chat_room_id = #{chatRoomId}
    </update>
    
    <delete id="deleteOldMessages" parameterType="int">
    DELETE FROM chatmessage
    WHERE deleted_at IS NOT NULL
    AND deleted_at &lt; NOW() - INTERVAL #{hours} HOUR
</delete>

    
</mapper>