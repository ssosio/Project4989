<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="boot.sagu.mapper.AuctionMapper">

    <!-- 경매글 리스트 -->
    <select id="getAuctionPosts" resultType="boot.sagu.dto.PostsDto">
        SELECT 
            post_id,
            member_id,
            title,
            content,
            price,
            trade_type,
            status,
            auction_end_time,
            winner_id,
            view_count,
            created_at,
            updated_at,
            post_type
        FROM posts
        WHERE trade_type = 'AUCTION'
        ORDER BY created_at DESC
    </select>
    
    <!-- 경매글 상세 조회 -->
    <select id="getAuctionDetail" parameterType="long" resultType="boot.sagu.dto.PostsDto">
        SELECT 
            post_id,
            member_id,
            title,
            content,
            price,
            trade_type,
            status,
            auction_end_time,
            winner_id,
            view_count,
            created_at,
            updated_at,
            post_type
        FROM posts
        WHERE post_id = #{postId} AND trade_type = 'AUCTION'
        LIMIT 1
    </select>

    <!-- 입찰 정보 저장 -->
    <insert id="insertBid" parameterType="boot.sagu.dto.AuctionDto">
        INSERT INTO auction_bids (
            post_id,
            bidder_id,
            bid_amount,
            bid_time
        ) VALUES (
            #{postId},
            #{bidderId},
            #{bidAmount},
            CONVERT_TZ(NOW(), 'UTC', 'Asia/Seoul')
        )
    </insert>

    <!-- 최고가 조회 -->
    <select id="getHighestBid" parameterType="long" resultType="boot.sagu.dto.AuctionDto">
        SELECT 
            bid_id,
            post_id,
            bidder_id,
            bid_amount,
            bid_time
        FROM auction_bids
        WHERE post_id = #{postId}
        ORDER BY bid_amount DESC,bid_time ASC
        LIMIT 1
    </select>

    <!-- 작성자 닉네임 조회 -->
    <select id="getMemberNickname" parameterType="long" resultType="boot.sagu.dto.MemberDto">
        SELECT 
            member_id,
            nickname
        FROM members
        WHERE member_id = #{memberId}
        LIMIT 1
    </select>

    <!-- 종료된 경매 목록 조회 (winner_id가 NULL이고 마감시간이 지난 경매) -->
    <select id="getEndedAuctions" resultType="boot.sagu.dto.PostsDto">
        <![CDATA[
        SELECT 
            post_id,
            member_id,
            title,
            content,
            price,
            trade_type,
            status,
            auction_end_time,
            winner_id,
            view_count,
            created_at,
            updated_at,
            post_type
        FROM posts
        WHERE trade_type = 'AUCTION' 
        AND winner_id IS NULL 
        AND auction_end_time < CONVERT_TZ(NOW(), 'UTC', 'Asia/Seoul')
        AND status != 'SOLD'
        ]]>
    </select>

    <!-- winner_id 업데이트 경매종료 처리 -->
    <update id="updateWinnerId">
        UPDATE posts 
        SET winner_id = #{winnerId},
            updated_at = CONVERT_TZ(NOW(), 'UTC', 'Asia/Seoul')
        WHERE post_id = #{postId}
    </update>

    <!-- 경매 상태 업데이트 -->
    <update id="updateAuctionStatus">
        UPDATE posts 
        SET status = #{status},
            updated_at = CONVERT_TZ(NOW(), 'UTC', 'Asia/Seoul')
        WHERE post_id = #{postId}
    </update>
    
    <!-- 수동 경매 종료 시 상태와 종료시간 업데이트 -->
    <update id="updateAuctionStatusAndEndTime">
        UPDATE posts 
        SET status = #{status},
            auction_end_time = CONVERT_TZ(NOW(), 'UTC', 'Asia/Seoul'),
            updated_at = CONVERT_TZ(NOW(), 'UTC', 'Asia/Seoul')
        WHERE post_id = #{postId}
    </update>
    
     <!-- 찜 상태 확인 -->
    <select id="checkFavoriteStatus" resultType="boolean">
        SELECT COUNT(*) > 0
        FROM favorites
        WHERE post_id = #{postId} AND member_id = #{memberId}
    </select>
    
     <!-- 찜 추가 -->
    <insert id="insertFavorite" parameterType="boot.sagu.dto.FavoritesDto">
        INSERT INTO favorites (
            member_id,
            post_id,
            created_at
        ) VALUES (
            #{memberId},
            #{postId},
            CONVERT_TZ(NOW(), 'UTC', 'Asia/Seoul')
        )
    </insert>
    
     <!-- 찜 삭제 -->
    <delete id="deleteFavorite">
        DELETE FROM favorites
        WHERE post_id = #{postId} AND member_id = #{memberId}
    </delete>
    
    <!-- 찜 개수 조회 -->
    <select id="getFavoriteCount" parameterType="long" resultType="int">
        SELECT COUNT(*)
        FROM favorites
        WHERE post_id = #{postId}
    </select>
    
      <!-- 경매 사진 조회 -->
    <select id="getAuctionPhotos" parameterType="long" resultType="map">
        SELECT 
            photo_id,
            post_id,
            photo_url,
            is_main
        FROM post_photos
        WHERE post_id = #{postId}
        ORDER BY is_main DESC, photo_id ASC
    </select>
   
   <!-- ==================================보증금 관련 =================================== -->
   <!-- 멤버가 게시글에 관한 보증급을 납부했는지 -->
   <select id="countAuctionGuaranteeByPostAndMember" resultType="int">
      select count(*) from auction_guarantees where post_id=#{postId} and member_id=#{memberId} and status ='PAID'
   </select>
   
   <!-- 보증금 납부  -->
   <insert id="insertGuarantee" parameterType="GuaranteeDTO">
       INSERT INTO auction_guarantees (post_id, member_id, amount, imp_uid,created_at)
                       VALUES (#{postId}, #{memberId}, #{amount}, #{impUid},now())
   </insert>
   
   <!-- 게시글에서 입찰자중 낙찰자가 아닌사람들의 모든정보 조회 -->
   <select id="findNonWinnerGuarantees" resultType="GuaranteeDTO">
        select * from auction_guarantees where post_id=#{postId} 
           and member_id!=#{winnerId}    
           and status = 'PAID'
   </select>
   <!-- 환불상태 업데이트 -->
   <update id="updateRefundStatus">
      update auction_guarantees set status = 'REFUNDED', refunded_at = now() where guaranteeId = #{guaranteeId}
   </update>
   
   <!-- 게시글 시작가 조회 -->
   <select id="getStartPrice" parameterType="int" resultType="int">
      select price from posts where post_id=#{postId} limit 1
   </select>
   
   
   
   
</mapper> 